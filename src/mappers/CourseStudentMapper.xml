<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.system.dao.CourseStudentMapper">
    <resultMap id="BaseResultMap" type="com.school.system.domain.CourseStudent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="cs_course_id" jdbcType="INTEGER" property="csCourseId"/>
        <result column="cs_student_id" jdbcType="INTEGER" property="csStudentId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        id, cs_course_id, cs_student_id
    </sql>
    <select id="selectByExample" parameterType="com.school.system.domain.CourseStudentExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from course_student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        select
        <include refid="Base_Column_List"/>
        from course_student
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        delete from course_student
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.school.system.domain.CourseStudentExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        delete from course_student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.school.system.domain.CourseStudent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        insert into course_student (id, cs_course_id, cs_student_id
        )
        values (#{id,jdbcType=INTEGER}, #{csCourseId,jdbcType=INTEGER}, #{csStudentId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.school.system.domain.CourseStudent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        insert into course_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="csCourseId != null">
                cs_course_id,
            </if>
            <if test="csStudentId != null">
                cs_student_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="csCourseId != null">
                #{csCourseId,jdbcType=INTEGER},
            </if>
            <if test="csStudentId != null">
                #{csStudentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.school.system.domain.CourseStudentExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        select count(*) from course_student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        update course_student
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.csCourseId != null">
                cs_course_id = #{record.csCourseId,jdbcType=INTEGER},
            </if>
            <if test="record.csStudentId != null">
                cs_student_id = #{record.csStudentId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        update course_student
        set id = #{record.id,jdbcType=INTEGER},
        cs_course_id = #{record.csCourseId,jdbcType=INTEGER},
        cs_student_id = #{record.csStudentId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.school.system.domain.CourseStudent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        update course_student
        <set>
            <if test="csCourseId != null">
                cs_course_id = #{csCourseId,jdbcType=INTEGER},
            </if>
            <if test="csStudentId != null">
                cs_student_id = #{csStudentId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.school.system.domain.CourseStudent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 02 15:48:47 CST 2019.
        -->
        update course_student
        set cs_course_id = #{csCourseId,jdbcType=INTEGER},
        cs_student_id = #{csStudentId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <resultMap id="courseDtoMap" type="com.school.system.domain.dto.CourseDto">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="course_teacherid" jdbcType="VARCHAR" property="courseTeacherid"/>
        <result column="course_teacher_name" jdbcType="INTEGER" property="courseTeacherName"/>
        <result column="course_weekday" jdbcType="INTEGER" property="courseWeekday"/>
        <result column="course_time" jdbcType="INTEGER" property="courseTime"/>
        <result column="course_place" jdbcType="VARCHAR" property="coursePlace"/>
        <result column="course_type" jdbcType="VARCHAR" property="courseType"/>
    </resultMap>
    <resultMap id="StudentDtoMap" type="com.school.system.domain.dto.StudentDto">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="student_name" jdbcType="VARCHAR" property="studentName" />
        <result column="student_num" jdbcType="VARCHAR" property="studentNum" />
        <result column="student_class_id" jdbcType="INTEGER" property="studentClassId" />
        <result column="student_class_name" jdbcType="VARCHAR" property="studentClassName" />
        <result column="student_major_id" jdbcType="INTEGER" property="studentMajorId" />
        <result column="student_major_name" jdbcType="VARCHAR" property="studentMajorName" />
        <result column="student_password" jdbcType="VARCHAR" property="studentPassword" />
    </resultMap>
    <resultMap id="StudentDtoFileMap" type="com.school.system.domain.dto.StudentFileDto">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="student_name" jdbcType="VARCHAR" property="studentName" />
        <result column="student_num" jdbcType="VARCHAR" property="studentNum" />
        <result column="student_class_id" jdbcType="INTEGER" property="studentClassId" />
        <result column="student_class_name" jdbcType="VARCHAR" property="studentClassName" />
        <result column="student_major_id" jdbcType="INTEGER" property="studentMajorId" />
        <result column="student_major_name" jdbcType="VARCHAR" property="studentMajorName" />
        <result column="student_file" jdbcType="VARCHAR" property="studentFile" />
        <result column="student_score" jdbcType="VARCHAR" property="studentScore" />
    </resultMap>
    <select id="selectCourseDtosByStudentId" resultMap="courseDtoMap">
        select c.id, course_name, course_teacherid, t.teacher_name course_teacher_name, course_weekday, course_time, course_place, course_type from course_student cs, course c, teacher t where cs.cs_student_id=#{studentId} and cs.cs_course_id=c.id and c.course_teacherid=t.id
    </select>
    <select id="selectStudentDtosByCourseId" resultMap="StudentDtoFileMap">
        select s.id, student_name, student_num, student_class_id, c.clazz_name student_class_name, student_major_id, m.major_name student_major_name, p.paper_file  student_file, score.score_score student_score from course_student cs LEFT JOIN paper p on cs.cs_student_id=p.paper_student_id and cs.cs_course_id=p.paper_course_id left join score on cs.cs_student_id=score.score_student_id and score.score_course_id=#{courseId}, student s, major m, clazz c where s.student_major_id=m.id and cs.cs_course_id=#{courseId} and s.id=cs.cs_student_id and s.student_class_id=c.id;
    </select>
</mapper>